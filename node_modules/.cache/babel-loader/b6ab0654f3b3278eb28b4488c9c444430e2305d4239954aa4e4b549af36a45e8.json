{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive - gitam.in\\\\Desktop\\\\My files\\\\react\\\\project\\\\my-app\\\\src\\\\DataManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataManager = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [newData, setNewData] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/curd/getdata');\n      if (response.ok) {\n        const result = await response.json();\n        setData(result);\n      } else {\n        const result = await response.text();\n        console.error('Failed to fetch data:', result);\n        setError(result || 'Failed to fetch data');\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setError('Failed to fetch data');\n    }\n  };\n  const addData = async () => {\n    if (!newData) {\n      setError('Please enter some data');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/curd/adddata', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: newData\n        })\n      });\n      if (response.ok) {\n        const result = await response.text(); // Read response as text\n        console.log('Response:', result); // Log the response for debugging\n        fetchData(); // Refresh the data list\n        setNewData('');\n        setError('');\n      } else {\n        const result = await response.text(); // Read the error response as text\n        console.error('Failed to add data:', result);\n        setError(result || 'Failed to add data');\n      }\n    } catch (error) {\n      console.error('Error adding data:', error);\n      setError('Failed to add data');\n    }\n  };\n  const deleteData = async id => {\n    try {\n      const response = await fetch('http://localhost:5000/api/curd/deletedata', {\n        method: 'DELETE',\n        headers: {\n          'id': id // Pass the ID in the headers\n        }\n      });\n      if (response.ok) {\n        const result = await response.text(); // Read response as text\n        console.log('Response:', result); // Log the response for debugging\n        fetchData(); // Refresh the data list\n        setError('');\n      } else {\n        const result = await response.text(); // Read the error response as text\n        console.error('Failed to delete data:', result);\n        setError(result || 'Failed to delete data');\n      }\n    } catch (error) {\n      console.error('Error deleting data:', error);\n      setError('Failed to delete data');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newData,\n      onChange: e => setNewData(e.target.value),\n      placeholder: \"Enter new data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addData,\n      children: \"Add Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteData(item.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(DataManager, \"x2xOQZLaxanV9//L+CLBzaQg+2c=\");\n_c = DataManager;\nexport default DataManager;\nvar _c;\n$RefreshReg$(_c, \"DataManager\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DataManager","_s","data","setData","newData","setNewData","error","setError","fetchData","response","fetch","ok","result","json","text","console","addData","method","headers","body","JSON","stringify","name","log","deleteData","id","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","style","color","map","item","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive - gitam.in/Desktop/My files/react/project/my-app/src/DataManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst DataManager = () => {\r\n    const [data, setData] = useState([]);\r\n    const [newData, setNewData] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/curd/getdata');\r\n            if (response.ok) {\r\n                const result = await response.json();\r\n                setData(result);\r\n            } else {\r\n                const result = await response.text();\r\n                console.error('Failed to fetch data:', result);\r\n                setError(result || 'Failed to fetch data');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n            setError('Failed to fetch data');\r\n        }\r\n    };\r\n\r\n    const addData = async () => {\r\n        if (!newData) {\r\n            setError('Please enter some data');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/curd/adddata', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ name: newData })\r\n            });\r\n\r\n            if (response.ok) {\r\n                const result = await response.text(); // Read response as text\r\n                console.log('Response:', result); // Log the response for debugging\r\n                fetchData(); // Refresh the data list\r\n                setNewData('');\r\n                setError('');\r\n            } else {\r\n                const result = await response.text(); // Read the error response as text\r\n                console.error('Failed to add data:', result);\r\n                setError(result || 'Failed to add data');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error adding data:', error);\r\n            setError('Failed to add data');\r\n        }\r\n    };\r\n\r\n    const deleteData = async (id) => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/curd/deletedata', {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'id': id // Pass the ID in the headers\r\n                }\r\n            });\r\n\r\n            if (response.ok) {\r\n                const result = await response.text(); // Read response as text\r\n                console.log('Response:', result); // Log the response for debugging\r\n                fetchData(); // Refresh the data list\r\n                setError('');\r\n            } else {\r\n                const result = await response.text(); // Read the error response as text\r\n                console.error('Failed to delete data:', result);\r\n                setError(result || 'Failed to delete data');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting data:', error);\r\n            setError('Failed to delete data');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Data Manager</h1>\r\n            <input\r\n                type=\"text\"\r\n                value={newData}\r\n                onChange={(e) => setNewData(e.target.value)}\r\n                placeholder=\"Enter new data\"\r\n            />\r\n            <button onClick={addData}>Add Data</button>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <ul>\r\n                {data.map(item => (\r\n                    <li key={item.id}>\r\n                        {item.name} \r\n                        <button onClick={() => deleteData(item.id)}>Delete</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DataManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}